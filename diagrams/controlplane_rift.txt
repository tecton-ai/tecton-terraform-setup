direction: right
tecton_virtual_private_tecton [label: "Tecton Control-Plane AWS ACcount", color: magenta, icon: aws] {
    control_plane_vpc [label: "Control Plane VPC", color: purple, icon: aws-vpc] {
        tecton_control_plane_app_metadata [label: "Tecton Control Plane Application & Metadata", color: gray, icon: monitor] {
            web_ui [label: "Web UI", icon: monitor]
            metadata_api [label: "Metadata API", icon: code]
            metrics_api [label: "Metrics API", icon: prometheus]
            feature_serving [label: "Feature Serving", icon: service]
            orchestration [label: "Orchestration", icon: settings]
            stream_ingest_api [icon: aws-ec2, label: "Stream Ingest API"]
        }
        nlb [label: "NLB", icon: aws-elastic-load-balancing]
        ingest_nlb [label: "Ingest NLB", icon: aws-elastic-load-balancing]
        vpc_endpoint_service [label: "VPC Endpoint Service (PrivateLink)", icon: aws-vpc-endpoint]
        ingest_vpc_endpoint_service [label: "Ingest VPC Endpoint Service (PrivateLink)", icon: aws-vpc-endpoint]

    }

    Rift VPC [color: blue, icon: aws-vpc] {
      rift_compute [label: "Rift Compute", icon: aws-ec2-instance]
    }
    rift_compute_role [label: "Rift Compute Role", icon: aws-iam-role]
    rift_compute_manager_role [label: "Rift Compute Manager Role", icon: aws-iam-role]
    rift_environments_repo[label: "Rift Environments Repository", icon: aws-ecr]
}

customer_aws_account [label: "Customer AWS Account", color: orange, icon: aws-account] {
    online_feature_store [label: "Online feature storage\nDynamoDB table", icon: aws-dynamodb]
    cross_account_role [label: "Cross Account Role", icon: aws-iam-role]
    offline_feature_store [label: "Offline feature storage\nS3", icon: aws-s3]
    customer_vpc [label: "VPC", color: lightblue, icon: aws-vpc] {
        online_feature_consumption [label: "Online Feature consumption\nML App/Service", icon: monitor]
        offline_feature_consumption [label: "Offline Feature consumption\nDevelopment tools (Notebook)", icon: book-open]
        vpc_endpoint_1 [label: "VPC Endpoint", icon: aws-vpc-endpoint]
    }

    VPC [label: "VPC", color: lightblue, icon: aws-vpc] {
      vpc_endpoint_2 [label: "VPC Endpoint", icon: aws-vpc-endpoint]
      streaming_ingest_app [icon: kafka, label: "Streaming / Realtime Application"]
    }

}

// connections
web_ui > nlb
metadata_api > nlb
metrics_api > nlb

nlb > vpc_endpoint_service
vpc_endpoint_service -> vpc_endpoint_1: PrivateLink Connection
vpc_endpoint_1 <> online_feature_consumption: Feature Serving
vpc_endpoint_1 > offline_feature_consumption: Tecton API

feature_serving > nlb
orchestration > cross_account_role: AssumeRole
cross_account_role > offline_feature_store


feature_serving > cross_account_role: Online Store Access (AssumeRole) [color: Black]
cross_account_role > online_feature_store
offline_feature_store <> offline_feature_consumption
orchestration > rift_compute_manager_role: AssumeRole
orchestration > rift_environments_repo: Push Environments Images
rift_environments_repo > rift_compute
rift_compute_manager_role > rift_compute
rift_compute > rift_compute_role
rift_compute_role > offline_feature_store: Materialization
rift_compute > rift_compute_role
rift_compute_role > online_feature_store: Materialization

stream_ingest_api > ingest_nlb
ingest_nlb > ingest_vpc_endpoint_service
ingest_vpc_endpoint_service <> vpc_endpoint_2
vpc_endpoint_2 < streaming_ingest_app
stream_ingest_api > offline_feature_store
stream_ingest_api > online_feature_store

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowS3Replication",
            "Effect": "Allow",
            "Action": [
                "s3:PutReplicationConfiguration"
            ],
            "Resource": ["arn:aws:s3:::tecton-${DEPLOYMENT_NAME}"]
        },
        {
            "Sid": "ManangeS3ReplicationRole",
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": [
                "arn:aws:iam::${ACCOUNT_ID}:role/s3-bucket-replication-tecton-${DEPLOYMENT_NAME}"
            ]
        },
        {
            "Sid": "S3Bucket",
            "Effect": "Allow",
            "Action": [
                "s3:Get*",
                "s3:ListBucket",
                "s3:CreateBucket",
                "s3:DeleteBucket",
                "s3:DeleteBucketPolicy",
                "s3:ListBucketVersions",
                "s3:PutBucketPolicy",
                "s3:PutEncryptionConfiguration",
                "s3:PutBucketTagging",
                "s3:PutBucketOwnershipControls",
                "s3:PutBucketVersioning",
                "s3:PutLifecycleConfiguration"
            ],
            "Resource": ["arn:aws:s3:::tecton-${DEPLOYMENT_NAME}-${SATELLITE_REGION}"]
        },
        {
            "Sid": "S3Object",
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject",
                "s3:GetObjectTagging",
                "s3:PutObjectTagging"
            ],
            "Resource": ["arn:aws:s3:::tecton-${DEPLOYMENT_NAME}-${SATELLITE_REGION}/*"]
        },
        {
            "Sid": "ManageElasticIp",
            "Effect": "Allow",
            "Action":[
                "ec2:AllocateAddress",
                "ec2:DisassociateAddress"
            ],
            "Resource": "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:elastic-ip/*",
            "Condition": {"StringEquals": {"aws:ResourceTag/tecton-owned": "true"}}
        },
        {
            "Sid": "EksClusterCreation",
            "Effect": "Allow",
            "Action": [
                "eks:CreateCluster",
                "eks:CreateNodegroup",
                "eks:DeleteNodegroup",
                "eks:DescribeNodegroup",
                "eks:ListNodegroups",
                "eks:DescribeCluster",
                "eks:ListClusters",
                "eks:AccessKubernetesApi",
                "eks:ListUpdates",
                "eks:ListFargateProfiles",
                "eks:UpdateClusterVersion",
                "eks:UpdateNodegroupConfig",
                "eks:UpdateNodegroupVersion",
                "eks:UpdateClusterConfig",
                "eks:DescribeUpdate",
                "eks:DeleteCluster"
            ],
            "Resource": [
                "arn:aws:eks:${SATELLITE_REGION}:${ACCOUNT_ID}:cluster/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:eks:${SATELLITE_REGION}:${ACCOUNT_ID}:cluster/${DEPLOYMENT_NAME}*",
                "arn:aws:eks:${SATELLITE_REGION}:${ACCOUNT_ID}:nodegroup/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:eks:${SATELLITE_REGION}:${ACCOUNT_ID}:nodegroup/${DEPLOYMENT_NAME}*"
            ]
        },
        {
            "Sid": "ConfigureLoadBalancer",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancer",
                "autoscaling:AttachLoadBalancerTargetGroups",
                "autoscaling:DetachLoadBalancerTargetGroups"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:listener/net/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:listener/net/${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:listener/app/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:listener/app/${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:loadbalancer/net/${DEPLOYMENT_NAME_CONCAT}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:loadbalancer/net/${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:loadbalancer/app/${DEPLOYMENT_NAME_CONCAT}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:targetgroup/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${SATELLITE_REGION}:${ACCOUNT_ID}:targetgroup/${DEPLOYMENT_NAME}*",
                "arn:aws:autoscaling:${SATELLITE_REGION}:${ACCOUNT_ID}:autoScalingGroup::autoScalingGroupName/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:autoscaling:${SATELLITE_REGION}:${ACCOUNT_ID}:autoScalingGroup:*:autoScalingGroupName/eks-*"
            ]
        },
        {
            "Sid": "DynamoDB",
            "Effect": "Allow",
            "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:CreateTable",
                "dynamodb:DeleteTable",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:TagResource",
                "dynamodb:UntagResource",
                "dynamodb:UpdateTable",
                "dynamodb:CreateBackup",
                "dynamodb:DescribeBackup",
                "dynamodb:DeleteBackup"
            ],
            "Resource": ["arn:aws:dynamodb:${SATELLITE_REGION}:${ACCOUNT_ID}:table/tecton-${DEPLOYMENT_NAME}*"]
        },
        {
            "Sid": "ElasticSearch",
            "Action": [
                "es:CreateDomain",
                "es:Describe*",
                "es:ListTags",
                "es:DeleteElasticsearchDomain"
            ],
            "Effect": "Allow",
            "Resource": ["arn:aws:es:${SATELLITE_REGION}:${ACCOUNT_ID}:domain/tecton-${DEPLOYMENT_NAME}"]
        },
        {
            "Sid": "RdsAccess",
            "Action": [
                "rds:CreateDBSubnetGroup",
                "rds:DeleteDBSubnetGroup",
                "rds:AddTagsToResource",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeDBInstances",
                "rds:ModifyDBInstance",
                "rds:CreateDBInstance",
                "rds:ListTagsForResource"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:rds:${SATELLITE_REGION}:${ACCOUNT_ID}:db:tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:rds:${SATELLITE_REGION}:${ACCOUNT_ID}:subgrp:tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:rds:${SATELLITE_REGION}:${ACCOUNT_ID}:og:default*",
                "arn:aws:rds:${SATELLITE_REGION}:${ACCOUNT_ID}:pg:default*"
            ]
        },
        {
            "Sid": "DescribeActionForEC2Resources",
            "Effect": "Allow",
            "Action": [
                "ec2:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CreateVPC",
            "Effect": "Allow",
            "Action": [
                "ec2:AttachInternetGateway",
                "ec2:AssociateRouteTable",
                "ec2:CreateNatGateway",
                "ec2:CreateRoute",
				"ec2:CreateRouteTable",
				"ec2:CreateSubnet",
				"ec2:CreateVpc",
                "ec2:DeleteRoute",
                "ec2:DisassociateRouteTable",
                "ec2:DeleteRouteTable",
                "ec2:DeleteNatGateway",
                "ec2:DeleteSubnet",
                "ec2:ModifyVpcAttribute",
                "ec2:ModifyVpcEndpoint",
                "ec2:DeleteVpcEndpoints",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpointServiceConfigurations"
            ],
            "Resource": [
                "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:vpc/*",
                "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:vpc*/*",
                "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:subnet/*",
                "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:natgateway/*",
                "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:route-table/*"
            ],
            "Condition": {"StringEquals": {"aws:ResourceTag/tecton-owned": "true"}}
        },
        {
            "Sid": "InterneteGateway",
            "Effect": "Allow",
            "Action":[
                "ec2:DetachInternetGateway"
            ],
            "Resource": "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:internet-gateway/*",
            "Condition": {"StringEquals": {"aws:ResourceTag/tecton-owned": "true"}}
        },
        {
            "Sid": "ManageSecurityGroups",
            "Effect": "Allow",
            "Action": [
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:CreateSecurityGroup",
				"ec2:DeleteSecurityGroup",
                "ec2:RevokeSecurityGroupIngress"
            ],
            "Resource": "arn:aws:ec2:${SATELLITE_REGION}:${ACCOUNT_ID}:security-group/*"
        }
    ]
}